-- source suite/versioning/common.inc

# test_01

create or replace table t1 (
  x int unsigned,
  y int unsigned
) with system versioning;

insert into t1 (x, y) values
  (0, 100),
  (1, 101),
  (2, 102),
  (3, 103),
  (4, 104),
  (5, 105),
  (6, 106),
  (7, 107),
  (8, 108),
  (9, 109);

set @t0= moment();
if ($default_engine == 'innodb')
{
--disable_query_log
  select sys_trx_start from t1 limit 1 into @x0;
--enable_query_log
}

delete from t1 where x = 3;
delete from t1 where x > 7;

insert into t1(x, y) values(3, 33);
select sys_trx_start from t1 where x = 3 and y = 33 into @t1;
if ($default_engine == 'innodb')
{
--disable_query_log
  set @x1= @t1;
  select vtq_commit_ts(@x1) into @t1;
--enable_query_log
}

select x, y from t1;
select x as ASOF_x, y from t1 for system_time as of timestamp @t0;
select x as FROMTO_x, y from t1 for system_time from '0-0-0 0:0:0' to timestamp @t1;
select x as BETWAND_x, y from t1 for system_time between '0-0-0 0:0:0' and timestamp @t1;
select x as ALL_x, y from t1 for system_time all;

--disable_query_log
if ($default_engine == 'innodb')
{
  select x as ASOF2_x, y from t1 for system_time as of @x0;
  select x as FROMTO2_x, y from t1 for system_time from @x0 to @x1;
  select x as BETWAND2_x, y from t1 for system_time between transaction @x0 and transaction @x1;
}
if ($default_engine != 'innodb')
{
  select x as ASOF2_x, y from t1 for system_time as of @t0;
  select x as FROMTO2_x, y from t1 for system_time from '0-0-0 0:0:0' to @t1;
  select x as BETWAND2_x, y from t1 for system_time between timestamp '0-0-0 0:0:0' and timestamp @t1;
}
--enable_query_log

# test_02

create or replace table t1 (
  x int unsigned,
  y int unsigned
) with system versioning;
create or replace table t2 (
  x int unsigned,
  y int unsigned
) with system versioning;

insert into t1 values (1, 1), (1, 2), (1, 3), (4, 4), (5, 5);
insert into t2 values (1, 2), (2, 1), (3, 1);
set @t0= moment();

select t1.x as IJ1_x1, t1.y as y1, t2.x as x2, t2.y as y2 from t1 inner join t2 on t1.x = t2.x;
select t1.x as LJ1_x1, t1.y as y1, t2.x as x2, t2.y as y2 from t1 left join t2 on t1.x = t2.x;
select t1.x as RJ1_x1, t1.y as y1, t2.x as x2, t2.y as y2 from t1 right join t2 on t1.x = t2.x;

delete from t1;
delete from t2;

select t1.x as IJ2_x1, t1.y as y1, t2.x as x2, t2.y as y2 from t1 inner join t2 on t1.x = t2.x
system_time as of timestamp @t0;
select t1.x as LJ2_x1, t1.y as y1, t2.x as x2, t2.y as y2 from t1 left join t2 on t1.x = t2.x
system_time as of timestamp @t0;
select t1.x as RJ2_x1, t1.y as y1, t2.x as x2, t2.y as y2 from t1 right join t2 on t1.x = t2.x
system_time as of timestamp @t0;

drop table t1;
drop table t2;

# Wildcard expansion on hidden fields

create table t1(
  A int
) with system versioning;
insert into t1 values(1);
select * from t1;

create or replace table t1 (x int);
insert into t1 values (1);
--error ER_VERSIONING_REQUIRED
select * from t1 for system_time all;

create or replace table t1 (x int) with system versioning;
insert into t1 values (1);
--error ER_VERS_HISTORY_LOCK
select * from t1 for system_time all for update;

create or replace table t1 (a int not null auto_increment primary key) with system versioning;
select * from (t1 as t2 left join t1 as t3 using (a)) natural left join t1;

create or replace table t1 (a int) with system versioning;
create or replace table t2 (a int) with system versioning;
insert into t1 values(1);
insert into t2 values(1);
create view v1 as select * from t2 inner join t1 using (a);
select * from v1;
drop view v1;

create or replace table t1 (a int) with system versioning;
insert into t1 values (1);
create view vt1 as select a from t1;
select * from t1 natural join vt1;
drop view vt1;

create or replace table t1(x int) with system versioning;
select * from (t1 as r left join t1 as u using (x)), t1;

# @end should be max
create or replace table t1 (a int) with system versioning;
insert into t1 values (1);
create trigger read_end after update on t1
  for each row set @end = old.sys_trx_end;
update t1 set a=2;
--replace_result 18446744073709551615 MAX_RESULT "2038-01-19 03:14:07.999999" MAX_RESULT
select @end;

create or replace table t1 (a int) with system versioning;
create or replace table t2 (b int) with system versioning;
insert into t1 values (1);
insert into t2 values (2);
select * from (select * from t1 cross join t2) as tmp;
select * from (select * from (select * from t1 cross join t2) as tmp1) as tmp2;
select * from (select * from t1 cross join t2 for system_time as of timestamp '0-0-0') as tmp;

create or replace table t1(a1 int) with system versioning;
create or replace table t2(a2 int) with system versioning;
insert into t1 values(1),(2);
insert into t2 values(1),(2);
select * from t1 for system_time all natural left join t2 for system_time all;

# natural join of a view and table
create or replace table t1(a1 int) with system versioning;
create or replace table t2(a2 int) with system versioning;
insert into t1 values(1),(2);
insert into t2 values(1),(2);
create or replace view v1 as select a1 from t1;

select * from v1 natural join t2;
select * from v1 natural left join t2;
select * from v1 natural right join t2;

create or replace table t1 (a int) with system versioning;
insert into t1 values (1);
insert into t1 values (2);
insert into t1 values (3);
select * from t1 left outer join (t1 as t2 left join t1 as t3 using (a)) on t1.a>1;

create or replace table t1 (x int) with system versioning;
create or replace table t2 (y int) with system versioning;
insert into t1 values (1), (2), (3);
delete from t1 where x = 3;
insert into t2 values (1);
select * from t1, t2 system_time all;

--error ER_VERS_UNUSED_CLAUSE
select * from t1 for system_time all, t2 for system_time all system_time all;

drop view v1;
drop table t1, t2;

call innodb_verify_vtq(27);

-- source suite/versioning/common_finish.inc
