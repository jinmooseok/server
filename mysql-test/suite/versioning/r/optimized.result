set @@session.time_zone='+00:00';
select ifnull(max(transaction_id), 0) into @start_trx_id from mysql.transaction_registry;
set @test_start=now(6);
create procedure if not exists verify_vtq()
begin
set @i= 0;
select
@i:= @i + 1 as No,
transaction_id > 0 as A,
commit_id > transaction_id as B,
begin_timestamp > @test_start as C,
commit_timestamp >= begin_timestamp as D
from mysql.transaction_registry
where transaction_id > @start_trx_id;
select ifnull(max(transaction_id), 0)
into @start_trx_id
from mysql.transaction_registry;
end~~
create function if not exists default_engine()
returns varchar(255)
deterministic
begin
declare e varchar(255);
select lower(engine) from information_schema.engines where support='DEFAULT' into e;
return e;
end~~
create function if not exists sys_datatype()
returns varchar(255)
deterministic
begin
if default_engine() = 'innodb' then
return 'bigint unsigned';
elseif default_engine() = 'myisam' then
return 'timestamp(6)';
end if;
return NULL;
end~~
create function if not exists sys_commit_ts(sys_field varchar(255))
returns varchar(255)
deterministic
begin
if default_engine() = 'innodb' then
return concat('vtq_commit_ts(', sys_field, ')');
elseif default_engine() = 'myisam' then
return sys_field;
end if;
return NULL;
end~~
create procedure if not exists innodb_verify_vtq(recs int)
begin
declare i int default 1;
if default_engine() = 'innodb' then
call verify_vtq;
elseif default_engine() = 'myisam' then
create temporary table tmp (No int, A bool, B bool, C bool, D bool);
while i <= recs do
insert into tmp values (i, 1, 1, 1, 1);
set i= i + 1;
end while;
select * from tmp;
drop table tmp;
end if;
end~~
create procedure concat_exec2(a varchar(255), b varchar(255))
begin
prepare stmt from concat(a, b);
execute stmt;
deallocate prepare stmt;
end~~
create procedure concat_exec3(a varchar(255), b varchar(255), c varchar(255))
begin
prepare stmt from concat(a, b, c);
execute stmt;
deallocate prepare stmt;
end~~
create or replace function moment()
returns timestamp(6)
not deterministic
begin
declare t timestamp(6);
declare i int;
set i= sleep(0.001);
set t= now(6);
set i= sleep(0.001);
return t;
end~~
create table t (
a int,
b int without system versioning
) with system versioning;
insert into t values(1, 2);
insert into t values(3, 4);
select * from t;
a	b
1	2
3	4
select a from t for system_time as of timestamp moment();
a
1
3
select a, b, b+0 from t for system_time as of timestamp now(6);
a	b	b+0
1	NULL	NULL
3	NULL	NULL
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
Warning	4109	Attempt to read unversioned field `b` in historical query
select * from t for system_time as of timestamp now(6);
a	b
1	NULL
3	NULL
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
select count(*) from t group by b system_time as of timestamp now(6);
count(*)
2
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
select * from t for system_time as of timestamp now(6) order by b asc;
a	b
1	NULL
3	NULL
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
Warning	4109	Attempt to read unversioned field `b` in historical query
select * from t for system_time as of timestamp now(6) order by b desc;
a	b
1	NULL
3	NULL
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
Warning	4109	Attempt to read unversioned field `b` in historical query
select * from t group by a having a=2 system_time as of timestamp now(6);
a	b
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
select * from t group by b having b=2 system_time as of timestamp now(6);
a	b
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
Warning	4109	Attempt to read unversioned field `b` in historical query
select a from t where b=2 system_time as of timestamp now(6);
a
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
select a from t where b=NULL system_time as of timestamp now(6);
a
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
select a from t where b is NULL system_time as of timestamp now(6);
a
1
3
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
select count(*), b from t group by b having b=NULL system_time as of timestamp now(6);
count(*)	b
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
Warning	4109	Attempt to read unversioned field `b` in historical query
select a, b from t;
a	b
1	2
3	4
select count(*) from t for system_time as of timestamp now(6) group by b;
count(*)
2
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
select * from t for system_time as of timestamp now(6) group by b having b=2;
a	b
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
Warning	4109	Attempt to read unversioned field `b` in historical query
select a from t for system_time as of timestamp now(6) where b=2;
a
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
select a from t for system_time as of timestamp now(6) where b=NULL;
a
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
select a from t for system_time as of timestamp now(6) where b is NULL;
a
1
3
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
select count(*), b from t for system_time as of timestamp now(6) group by b having b=NULL;
count(*)	b
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
Warning	4109	Attempt to read unversioned field `b` in historical query
create or replace table t (
a int,
b int not null without system versioning
) with system versioning;
insert into t values (1, 2), (3, 4);
select * from t for system_time as of timestamp moment();
a	b
1	NULL
3	NULL
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
select * from t for system_time as of timestamp now(6) where b is NULL;
a	b
1	NULL
3	NULL
Warnings:
Warning	4109	Attempt to read unversioned field `b` in historical query
Warning	4109	Attempt to read unversioned field `b` in historical query
drop database test;
create database test;
